ulib_srcs = ['hash.c', 'vector.c', 'utf8.c', 'pgalloc.c', 'cache.c']

ulib_hdrs = ['avl-tree.h', 'avl-tree.c', 'cache.h', 'defs.h',
             'hash.h', 'list.h', 'pgalloc.h', 'splay-tree.h',
             'splay-tree.c', 'utf8.h', 'vector.h']

# Save the common compiler settings.  
save_cc = smk.env.cc

# Arrange the library objects to be compiled to Position Independent
# Code.
smk.env.cc = smk.clone (save_cc)
smk.env.cc.pic = True

# Build the library.  
libulib = smk.make_shared_lib ('ulib', srcs = ulib_srcs)

# Restore the original compiler settings.
smk.env.cc = save_cc

# Install the library and the headers.
smk.install ('lib', libulib)
if libulib.implib:
    smk.install ('lib', libulib.implib)
smk.install ('include/ulib', ulib_hdrs)

# Local variables:
# mode: python
# indent-tabs-mode: nil
# arch-tag: cb99d9fc-1e88-4d9e-87f3-1ab1e10f4d4e
# End:
